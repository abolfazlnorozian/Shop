definitions:
  entities.Addr:
    properties:
      _id:
        type: string
      address:
        type: string
      city:
        type: string
      postalCode: {}
      state:
        type: string
    type: object
  entities.Addrs:
    properties:
      _id:
        type: string
      address:
        type: string
      city:
        type: string
      postalCode:
        description: |-
          Latitude   float64            `json:"latitude" bson:"latitude"`
          Longitude  float64            `json:"longitude" bson:"longitude"`
      state:
        type: string
    required:
    - address
    - city
    - postalCode
    - state
    type: object
  entities.Ancestor:
    properties:
      _id:
        type: string
      name:
        type: string
      slug:
        type: string
    type: object
  entities.Attribute:
    properties:
      _id:
        type: string
      key:
        type: string
      value:
        type: string
    type: object
  entities.Category:
    properties:
      __v:
        type: integer
      _id:
        type: string
      ancestors:
        items:
          $ref: '#/definitions/entities.Ancestor'
        type: array
      details:
        type: string
      faq:
        items:
          $ref: '#/definitions/entities.NewFaq'
        type: array
      image:
        $ref: '#/definitions/entities.Image'
      name:
        type: string
      parent: {}
      slug:
        type: string
    type: object
  entities.Comments:
    properties:
      __v:
        type: integer
      _id:
        type: string
      buyOffer:
        type: string
      createdAt:
        type: string
      isActive:
        type: boolean
      productId:
        type: string
      rate:
        type: integer
      text:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  entities.Dimension:
    properties:
      _id:
        type: string
      key:
        type: integer
      values:
        items:
          type: integer
        type: array
    type: object
  entities.FavoritesProducts:
    properties:
      __v:
        type: integer
      _id:
        type: string
      amazing:
        type: boolean
      attributes:
        items:
          $ref: '#/definitions/entities.Attribute'
        type: array
      bannerUrl:
        type: string
      categories:
        items: {}
        type: array
      categoryId:
        type: string
      comments:
        items:
          type: string
        type: array
      createdAt:
        type: string
      details:
        type: string
      dimensions:
        items:
          $ref: '#/definitions/entities.Dimension'
        type: array
      discountPercent:
        type: integer
      images:
        items:
          $ref: '#/definitions/entities.ImagePro'
        type: array
      isMillModel:
        type: boolean
      name:
        type: string
      name_fuzzy:
        items:
          type: string
        type: array
      notExist:
        type: boolean
      parent:
        type: string
      price:
        type: integer
      productType:
        type: string
      quantity:
        type: integer
      salesNumber:
        type: integer
      shortId:
        type: string
      similarProducts:
        items:
          type: string
        type: array
      slug:
        type: string
      stock:
        type: integer
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      variations:
        items:
          $ref: '#/definitions/entities.Variation'
        type: array
    type: object
  entities.Image:
    properties:
      url:
        type: string
    type: object
  entities.ImagePro:
    properties:
      _id:
        type: string
      url:
        type: string
    type: object
  entities.MixProducts:
    properties:
      __v:
        type: integer
      _id:
        type: string
      createdAt:
        type: string
      image:
        $ref: '#/definitions/entities.UrlImage'
      name:
        type: string
      price:
        type: integer
      updatedAt:
        type: string
    type: object
  entities.NewFaq:
    properties:
      _id:
        type: string
      answer:
        type: string
      completed:
        type: boolean
      question:
        type: string
    type: object
  entities.Order:
    properties:
      __v:
        type: integer
      _id: {}
      address:
        $ref: '#/definitions/entities.Addrs'
      amountCoupon:
        type: integer
      couponCode:
        type: string
      createdAt:
        type: string
      isCoupon:
        type: boolean
      jStartDate:
        type: string
      message:
        type: string
      paymentId:
        type: string
      paymentStatus:
        type: string
      postalCost:
        type: integer
      postalTrakingCode:
        type: string
      products:
        items:
          $ref: '#/definitions/entities.Product'
        type: array
      startDate:
        type: string
      status:
        type: string
      totalDiscount:
        type: number
      totalPrice:
        type: integer
      totalQuantity:
        type: integer
      updatedAt:
        type: string
      userId:
        type: string
    required:
    - address
    type: object
  entities.Product:
    properties:
      _id:
        type: string
      discountPercent:
        type: number
      name:
        type: string
      price:
        type: integer
      productId:
        type: string
      quantity:
        type: integer
      variationsKey:
        items:
          type: integer
        type: array
    type: object
  entities.Properties:
    properties:
      __v:
        type: integer
      _id:
        type: integer
      createdAt:
        type: string
      name:
        type: string
      parent:
        type: integer
      updatedAt:
        type: string
    type: object
  entities.Response:
    properties:
      __v:
        type: integer
      _id:
        type: string
      ancestors:
        items:
          $ref: '#/definitions/entities.Ancestor'
        type: array
      children:
        items:
          $ref: '#/definitions/entities.Response'
        type: array
      details:
        type: string
      faq:
        items:
          $ref: '#/definitions/entities.NewFaq'
        type: array
      image:
        $ref: '#/definitions/entities.Image'
      name:
        type: string
      parent: {}
      slug:
        type: string
    type: object
  entities.UrlImage:
    properties:
      url:
        type: string
    type: object
  entities.Variation:
    properties:
      _id:
        type: string
      discountPercent:
        type: integer
      keys:
        items:
          type: integer
        type: array
      price:
        type: integer
      quantity:
        type: integer
    type: object
  response.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  response.GetProductByOneField:
    properties:
      docs:
        items:
          properties:
            _id:
              type: string
            amazing:
              type: boolean
            bannerUrl:
              type: string
            discountPercent:
              type: number
            images:
              items:
                properties:
                  _id:
                    type: string
                  url:
                    type: string
                type: object
              type: array
            name:
              type: string
            notExist:
              type: boolean
            price:
              type: integer
            productType:
              type: string
            salesNumber:
              type: integer
            slug:
              type: string
            stock:
              type: integer
            variations:
              items:
                properties:
                  _id:
                    type: string
                  discountPercent:
                    type: integer
                  keys:
                    items:
                      type: integer
                    type: array
                  price:
                    type: integer
                  quantity:
                    type: integer
                type: object
              type: array
          type: object
        type: array
      hasNextPage:
        description: Flag indicating if there is a next page
        type: boolean
      hasPrevPage:
        description: Flag indicating if there is a previous page
        type: boolean
      limit:
        description: Number of items per page
        type: integer
      nextPage:
        description: Next page number (null if there is no next page)
        type: integer
      page:
        description: Current page number
        type: integer
      pagingCounter:
        description: Counter for pagination
        type: integer
      prevPage:
        description: Previous page number (null if there is no previous page)
        type: integer
      totalDocs:
        description: Total number of documents
        type: integer
      totalPages:
        description: Total number of pages
        type: integer
    type: object
  response.Input:
    properties:
      productId:
        type: string
      quantity:
        type: integer
      quantityState:
        type: string
      variationsKey:
        items:
          type: integer
        type: array
    type: object
  response.LoginResponse:
    properties:
      body:
        properties:
          refreshToken:
            type: string
          token:
            type: string
        type: object
      message:
        type: string
      success:
        type: boolean
    type: object
  response.MixProductsResponse:
    properties:
      body:
        items:
          $ref: '#/definitions/entities.MixProducts'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  response.RegisterUsersResponse:
    properties:
      body:
        properties:
          password:
            type: string
          username:
            type: string
        type: object
      message:
        type: string
      success:
        type: string
    type: object
  services.DimensionResponse:
    properties:
      _id:
        type: string
      key:
        $ref: '#/definitions/entities.Properties'
      values:
        items:
          $ref: '#/definitions/entities.Properties'
        type: array
    type: object
  services.ProductWithCategories:
    properties:
      __v:
        type: integer
      _id:
        type: string
      amazing:
        type: boolean
      attributes:
        items:
          $ref: '#/definitions/entities.Attribute'
        type: array
      bannerUrl:
        type: string
      categories:
        items:
          $ref: '#/definitions/entities.Category'
        type: array
      categoryId:
        type: string
      comments:
        items:
          type: string
        type: array
      createdAt:
        type: string
      details:
        type: string
      dimensions:
        items:
          $ref: '#/definitions/services.DimensionResponse'
        type: array
      discountPercent:
        type: number
      images:
        items:
          $ref: '#/definitions/entities.ImagePro'
        type: array
      isMillModel:
        type: boolean
      name:
        type: string
      name_fuzzy:
        items:
          type: string
        type: array
      notExist:
        type: boolean
      parent:
        type: string
      price:
        type: integer
      productType:
        type: string
      quantity:
        type: integer
      salesNumber:
        type: integer
      shortId:
        type: string
      similarProducts:
        items:
          type: string
        type: array
      slug:
        type: string
      stock:
        type: integer
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      variations:
        items:
          $ref: '#/definitions/entities.Variation'
        type: array
    type: object
info:
  contact: {}
paths:
  /api/brands:
    get:
      consumes:
      - application/json
      description: Get All Brands
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Get Brands
      tags:
      - brands
  /api/categories:
    get:
      consumes:
      - application/json
      description: Get all categories with hierarchical structure
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Find All Categories
      tags:
      - categories
  /api/mix-products:
    get:
      consumes:
      - application/json
      description: Get mix products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MixProductsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get mix products
      tags:
      - products
  /api/products:
    get:
      consumes:
      - application/json
      description: Get products based on category ID, category name, search query,
        amazing status, onlyExists status, or new status with optional pagination
      parameters:
      - description: Category ID
        in: query
        name: categoryid
        type: string
      - description: Category Name
        in: query
        name: category
        type: string
      - description: Search query for fuzzy matching product names
        in: query
        name: search
        type: string
      - description: Filter by amazing products (true/false)
        in: query
        name: amazing
        type: string
      - description: Filter by only existing products (true/false)
        in: query
        name: onlyexists
        type: string
      - description: Filter by new products (1 for true, 0 for false)
        in: query
        name: new
        type: string
      - description: Page number for pagination (default is 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default is 40)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProductByOneField'
      summary: Get products based on various filters
      tags:
      - products
  /api/products/:
    get:
      consumes:
      - application/json
      description: Get products by category with optional pagination
      parameters:
      - description: categoryName or slug
        in: query
        name: category
        type: string
      - description: Page number for pagination (default is 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default is 40)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProductByOneField'
      summary: Get products by category
      tags:
      - products
  /api/products/{productID}/comments:
    post:
      consumes:
      - application/json
      description: Post a comment for a product
      parameters:
      - description: Product ID
        format: '"hex"'
        in: path
        name: productID
        required: true
        type: string
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment details
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/entities.Comments'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/entities.Comments'
      summary: Post Comment
      tags:
      - comments
  /api/products/{slug}:
    get:
      consumes:
      - application/json
      description: Get products by slug
      parameters:
      - description: Product Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ProductWithCategories'
      summary: Get products by slug
      tags:
      - products
  /api/products/{slug}/comments:
    get:
      consumes:
      - application/json
      description: Get comments for a specific product by slug
      parameters:
      - description: Product Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Comments'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Get Comments for a Product
      tags:
      - comments
  /api/users/addresses:
    get:
      consumes:
      - application/json
      description: Post Addresses for users
      parameters:
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
      summary: Get Address
      tags:
      - Address
    post:
      consumes:
      - application/json
      description: Post Addresses for users
      parameters:
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      - description: Address details
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/entities.Addr'
      produces:
      - application/json
      responses:
        "200":
          description: Success
      summary: Post Address
      tags:
      - Address
  /api/users/addresses/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific address for a user
      parameters:
      - description: Address ID
        format: '"hex"'
        in: path
        name: id
        required: true
        type: string
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
      summary: Delete Address by ID
      tags:
      - Address
  /api/users/auth/login:
    post:
      consumes:
      - application/json
      description: Login user by Username and Password and get token for that user
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login User
      tags:
      - login
  /api/users/auth/smsverification:
    get:
      consumes:
      - application/json
      description: Register user by phoneNumber and send SMS verification code
      parameters:
      - description: Phone number (must be at least 10 digits)
        in: query
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.RegisterUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register User
      tags:
      - login
  /api/users/carts:
    delete:
      consumes:
      - application/json
      description: Get a product From cart
      parameters:
      - description: ProductId
        in: query
        name: id
        required: true
        type: string
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Success
      summary: Get Cart
      tags:
      - Cart
    get:
      consumes:
      - application/json
      description: Get a product From cart
      parameters:
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Success
      summary: Get Cart
      tags:
      - Cart
    post:
      consumes:
      - application/json
      description: Post a product to cart
      parameters:
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment details
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/response.Input'
      produces:
      - application/json
      responses:
        "201":
          description: Success
      summary: Post Cart
      tags:
      - Cart
  /api/users/favorites:
    get:
      consumes:
      - application/json
      description: Get a Product from favorite field of user
      parameters:
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
      summary: Get Favorite
      tags:
      - Favorite
    post:
      consumes:
      - application/json
      description: Post a Product as Favorite
      parameters:
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      - description: Product object to be added as favorite
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/entities.FavoritesProducts'
      produces:
      - application/json
      responses:
        "200":
          description: Success
      summary: Post Favorite
      tags:
      - Favorite
  /api/users/favorites/{productID}:
    delete:
      consumes:
      - application/json
      description: Delete a Product from favorite field of user
      parameters:
      - description: Product ID to delete from favorites
        format: '"hexadecimal ObjectId"'
        in: path
        name: productID
        required: true
        type: string
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
      summary: Delete Favorite
      tags:
      - Favorite
  /api/users/orders:
    get:
      consumes:
      - application/json
      description: Get Order by OrderId
      parameters:
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
      summary: GET Order
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Post a Product to order
      parameters:
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order object to be Ordered
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/entities.Order'
      produces:
      - application/json
      responses:
        "200":
          description: Success
      summary: Post Order
      tags:
      - Orders
  /api/users/orders/{id}:
    get:
      consumes:
      - application/json
      description: Get Order by OrderId
      parameters:
      - description: authorization
        format: '"Bearer your_actual_token_here"'
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order ID to Get from an Order
        format: '"hexadecimal ObjectId"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
      summary: GET Order
      tags:
      - Orders
swagger: "2.0"
